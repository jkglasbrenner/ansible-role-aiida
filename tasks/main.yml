---
- name: include os-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: install package dependencies for aiida installation
  package:
    name: "{{ aiida_package_dependencies }}"
    state: present

- name: check virtual environment with conda env list
  become_user: "{{ aiida_user }}"
  shell: bash -lc "conda env list"
  register: conda_check_env
  changed_when: false
  failed_when: conda_check_env.rc != 0

- when: conda_check_env.stdout is not search(aiida_env_name)
  block:
    - name: generate environment.yml
      become_user: "{{ aiida_user }}"
      template:
        src: "environment.yml.j2"
        dest: "/tmp/environment.yml"
        mode: 0644
        owner: "{{ aiida_user }}"
        group: "{{ aiida_user }}"

    - name: create conda virtual environment
      become_user: "{{ aiida_user }}"
      shell: bash -lc "conda env create --file /tmp/environment.yml"
      register: conda_create_env
      changed_when: "conda_create_env.stdout is not search('CondaValueError: prefix already exists')"
      failed_when: conda_check_env.rc != 0

- name: delete environment.yml
  file:
    path: "/tmp/environment.yml"
    state: absent

- name: install aiida
  become_user: "{{ aiida_user }}"
  shell: bash -lc "conda activate {{ aiida_env_name }} && pip install {{ item }}"
  register: pip_install_aiida
  loop: "{{ aiida_pypi_packages | flatten(levels=1) }}"
  changed_when: "pip_install_aiida.stdout is search('Successfully installed')"
  failed_when: pip_install_aiida.rc != 0

- name: create aiida user and set password with no expire date
  become_user: postgres
  postgresql_user:
    port: 5432
    name: aiida
    encrypted: yes
    password: "{{ aiida_aiidadb_password | default(omit) }}"
    expires: infinity
    state: present

- name: create aiidadb database
  become_user: postgres
  postgresql_db:
    port: 5432
    name: aiidadb
    owner: aiida
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
    encoding: 'UTF-8'
    template: 'template0'
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

- name: grant full privileges to aiida user on aiidadb database
  become_user: postgres
  postgresql_privs:
    port: 5432
    db: aiidadb
    role: aiida
    privs: ALL
    type: database
...
